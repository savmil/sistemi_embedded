/*
 * uart_intr.c
 *
 *  Created on: 27 apr 2019
 *      Author: michele
 */

#include "my_uart_int.h"
#include "uart_intr.h"
#include "xil_types.h"
#include "xil_io.h"


void MYIP_WITH_INTERRUPT_EnableInterrupt(uart_intr * Instance, u32 mask)
{
	u32 Register;
	unsigned IER_OFFSET = 0x04;
	Register = MY_UART_INT_mReadReg(Instance->BaseAddress,IER_OFFSET);
	MY_UART_INT_mWriteReg(Instance->BaseAddress,IER_OFFSET, Register | mask);

}


void MYIP_WITH_INTERRUPT_GlobalEnableInterrupt(uart_intr * Instance, u32 mask)
{
	u32 Register;
	unsigned GIE_OFFSET = 0x00;
	Register = MY_UART_INT_mReadReg(Instance->BaseAddress,GIE_OFFSET);
	MY_UART_INT_mWriteReg(Instance->BaseAddress,GIE_OFFSET, Register | mask);

}

void MYIP_WITH_INTERRUPT_DisableInterrupt(uart_intr * Instance, u32 mask)
{
	u32 Register;
	unsigned IER_OFFSET = 0x04;
	Register = MY_UART_INT_mReadReg(Instance->BaseAddress,IER_OFFSET);
	MY_UART_INT_mWriteReg(Instance->BaseAddress,IER_OFFSET, Register & (~mask));
}


void MYIP_WITH_INTERRUPT_ACK(uart_intr * Instance, u32 mask)
{
	u32 Register;
	unsigned ACK_OFFSET = 0x0C;
	Register = MY_UART_INT_mReadReg(Instance->BaseAddress,ACK_OFFSET);
	MY_UART_INT_mWriteReg(Instance->BaseAddress,ACK_OFFSET, Register | mask);
}
