#include "myIntGPIO2.h"
#include "myIntGPIO.h"
#include "xil_types.h"
#include "xil_io.h"


void MYIP_WITH_INTERRUPT_EnableInterrupt(provaInt * provaIntInstance, u32 mask)
{
	u32 Register;
	unsigned IER_OFFSET = 0x04;
	Register = MYINTGPIO_mReadReg(provaIntInstance->BaseAddress,IER_OFFSET);
	MYINTGPIO_mWriteReg(provaIntInstance->BaseAddress,IER_OFFSET, Register | mask);

}


void MYIP_WITH_INTERRUPT_GlobalEnableInterrupt(provaInt * provaIntInstance, u32 mask)
{
	u32 Register;
	unsigned GIE_OFFSET = 0x00;
	Register = MYINTGPIO__mReadReg(provaIntInstance->BaseAddress,GIE_OFFSET);
	MYINTGPIO__mWriteReg(provaIntInstance->BaseAddress,GIE_OFFSET, Register | mask);

}

void MYIP_WITH_INTERRUPT_DisableInterrupt(provaInt * provaIntInstance, u32 mask)
{
	u32 Register;
	unsigned IER_OFFSET = 0x04;
	Register = MYINTGPIO__mReadReg(provaIntInstance->BaseAddress,IER_OFFSET);
	MYINTGPIO__mWriteReg(provaIntInstance->BaseAddress,IER_OFFSET, Register & (~mask));
}


void MYIP_WITH_INTERRUPT_ACK(provaInt * provaIntInstance, u32 mask)
{
	u32 Register;
	unsigned ACK_OFFSET = 0x0C;
	Register = MYINTGPIO__mReadReg(provaIntInstance->BaseAddress,ACK_OFFSET);
	MYINTGPIO__mWriteReg(provaIntInstance->BaseAddress,ACK_OFFSET, Register | mask);
}
